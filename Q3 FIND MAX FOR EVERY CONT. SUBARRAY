#include <iostream>
#include <vector>
#include <limits.h>

using namespace std;

void maxSlidingWindow(const vector<int>& nums, int k) {
    if (nums.empty() || k <= 0) return;
    vector<int> maxValues;

    for (int i = 0; i <= nums.size() - k; i++) {
        int maxInWindow = INT_MIN; 
        for (int j = i; j < i + k; j++) {
            maxInWindow = max(maxInWindow, nums[j]); 
        }
        maxValues.push_back(maxInWindow); 
    }

    for (int maxValue : maxValues) {
        cout << maxValue << " ";
    }
    cout << endl;
}

int main() {
    vector<int> nums = {8,5,10,7,9,4,15,12,90,13};
    int k = 4;
    cout << "Maximums of each contiguous subarray of size " << k << " are: ";
    maxSlidingWindow(nums, k);

    return 0;
}
